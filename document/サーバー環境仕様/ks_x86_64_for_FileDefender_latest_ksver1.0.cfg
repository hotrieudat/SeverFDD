#version=RHEL7
# System authorization information
text
auth --enableshadow --passalgo=sha512

# Use network installation
url --url="http://192.168.3.250/centos/7.1.1503/x86_64/"
# Run the Setup Agent on first boot
firstboot --enable
ignoredisk --only-use=sda
# Keyboard layouts
keyboard --vckeymap=jp106 --xlayouts='jp'
# System language
lang en_US.UTF-8

# Network information
network --device eth0 --bootproto dhcp --hostname localhost pxe
#network --device=eth0 --bootproto=static --ip=192.168.5.250 --netmask=255.255.255.0 --gateway=192.168.5.1 --nameserver=192.168.3.237,192.168.6.237 --hostname=localhost
#network --device=eth1 --bootproto=static --ip=192.168.101.200 --netmask=255.255.255.0 --gateway=192.168.101.1 --nameserver=192.168.3.253,192.168.6.254
#network  --hostname=localhost
# Root password
rootpw --iscrypted $6$kGuU95dTFI2Q7Dg0$OnW6iftTsONs8kMY.Ezs.Bh78hXEIaJiK4cH8rQg097Old14cn8MPbO4nb3RSOAi0dssL3JVzvxaNSzS0MMdu.
# System timezone
timezone Asia/Tokyo --isUtc --nontp

# System Customize
#firewall --disabled
#firewall --enabled --ssh --http --port=443:tcp
firewall --enabled --ssh --http --service=https

# Disable SELinux
selinux --disabled


# partitioning using LVM
clearpart --all

### partitioning FileDefender for Release
#part /boot --fstype="xfs" --ondisk=sda --size=500
#part pv.1 --ondisk=sda --size=1 --grow
#volgroup VolGroup00 pv.1
#logvol swap --fstype="swap" --name=LogVolswap --vgname=VolGroup00 --size=4094
#logvol / --fstype="xfs" --name=LogVol00 --vgname=VolGroup00 --size=51200
#logvol /var --fstype="xfs" --name=LogVol01 --vgname=VolGroup00 --size=51200
#logvol /var/log --fstype="xfs" --name=LogVol02 --vgname=VolGroup00 --size=51200
#logvol /data --fstype="xfs" --name=LogVol03 --vgname=VolGroup00 --size=256000


### partitioning FileDefender for Develop & Demo
part /boot --fstype="xfs" --ondisk=sda --size=500
part pv.1 --ondisk=sda --size=1 --grow
volgroup VolGroup00 pv.1
logvol swap --fstype="swap" --name=LogVolswap --vgname=VolGroup00 --size=4094
#logvol / --fstype="xfs" --name=LogVol00 --vgname=VolGroup00 --size=51200
logvol / --fstype="xfs" --name=LogVol00 --vgname=VolGroup00 --size=1 --grow
#logvol /var --fstype="xfs" --name=LogVol01 --vgname=VolGroup00 --size=51200
#logvol /var/log --fstype="xfs" --name=LogVol02 --vgname=VolGroup00 --size=51200
#logvol /data --fstype="xfs" --name=LogVol03 --vgname=VolGroup00 --size=256000


### partitioning Test
#part /boot --fstype="xfs" --ondisk=sda --size=500
#part pv.1 --ondisk=sda --size=1 --grow
#volgroup VolGroup00 pv.1
#logvol swap --fstype="swap" --name=LogVolswap --vgname=VolGroup00 --size=1024
#logvol / --fstype="xfs" --name=LogVol00 --vgname=VolGroup00 --size=1 --grow
#logvol /var --fstype="xfs" --name=LogVol01 --vgname=VolGroup00 --size=10240
#logvol /var/log --fstype="xfs" --name=LogVol02 --vgname=VolGroup00 --size=5120
#logvol /data --fstype="xfs" --name=LogVol03 --vgname=VolGroup00 --size=1 --grow

# partitioning Auto
#autopart


%packages
@compat-libraries
@core
@development

%end

%post --log=/root/anaconda-post.log

exec < /dev/tty3 > /dev/tty3
/usr/bin/chvt 3

### Install for File Defender ###

#**** need to consider below part ******************************************************************

# install epel
yum install epel-release -y
sed -i 's/enabled=1/enabled=0/g' /etc/yum.repos.d/epel.repo

# install remi
rpm --import http://192.168.3.250/sf5/centos7/RPM-GPG-KEY-remi
rpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
sed -i 's/enabled=1/enabled=0/g' /etc/yum.repos.d/remi.repo
sed -i 's/enabled=1/enabled=0/g' /etc/yum.repos.d/remi-safe.repo

# intall RPMforge
rpm --import http://192.168.3.250/sf5/centos7/RPM-GPG-KEY.dag.txt
rpm -ivh http://192.168.3.250/sf5/centos7/rpmforge-release-0.5.3-1.el7.rf.x86_64.rpm
sed -i 's/enabled = 1/enabled = 0/g' /etc/yum.repos.d/rpmforge.repo

#***************************************************************************************************


# install net-tools
yum install net-tools bind-utils -y

# install killall
yum install psmisc -y

# install bash-completion
yum install bash-completion -y

# install Vim & Customize(color setting)
yum install vim -y
echo "" >> /root/.bashrc
echo "alias vi='vim'" >> /root/.bashrc
source /root/.bashrc

# install wget
yum install wget -y

# install ntp
yum install ntp -y

# install ImageMagick
#yum install ImageMagick* -y

# setting journal
mkdir /var/log/journal
sed -i 's/#SystemMaxUse=/SystemMaxUse=1G/g' /etc/systemd/journald.conf
sed -i 's/#SystemMaxFileSize=/SystemMaxFileSize=200M/g' /etc/systemd/journald.conf
systemctl restart systemd-journald.service

# install Apache
yum install httpd* -y
yum install mod_ssl -y

# install PostgreSQL
yum install postgresql-* -y

# install mysql
yum install mysql* -y

# install PHP & Library
yum install --skip-broken php-* -y
yum install --enablerepo=epel --skip-broken php-mcrypt -y

# intall perl-CGI
#yum install perl-CGI -y

# intall XML_Serializer(Pear)
#wget http://192.168.3.250/fd/src/XML_Serializer-0.20.2.tgz -P /usr/local/src/
#wget http://192.168.3.250/sf5/centos7/XML_Util-1.3.0.tgz -P /usr/local/src/
#pear install /usr/local/src/XML_Serializer-0.20.2.tgz
#pear install /usr/local/src/XML_Util-1.3.0.tgz
#pear upgrade PEAR

# install nkf
yum localinstall http://192.168.3.250/fd/src/nkf-2.0.8b-6.2.el6.x86_64.rpm -y

# install convmv
wget http://192.168.3.250/fd/src/convmv-2.0.tar.gz -P /usr/local/src/
(cd /usr/local/src/;tar zxvf ./convmv-2.0.tar.gz;cd ./convmv-2.0;make;make install)
ln -s /usr/local/bin/convmv /usr/bin/convmv

# install poppler (for preview)
##yum install poppler poppler-utils -y

# install wireshark & tcpdump & telnet
yum install wireshark -y
yum install tcpdump -y
# telnetは設置やサポートのフェーズで特定のサーバーの特定ポートへの通信疎通の確認を行えるようにするためのもの
# 他製品にもある
yum install telnet -y

# for f-secure
yum install -y ld-linux.so.2
yum install -y libstdc++
yum install -y libstdc++.i686

# install mail-command
yum install -y mailx

# for update
#yum update -y

# for ImageMagick update
#yum install libjpeg-devel libpng-devel -y
#wget http://192.168.3.250/fd/src/ImageMagick.tar.gz -P /usr/local/src/
#tar zxvf /usr/local/src/ImageMagick.tar.gz -C /usr/local/src/
#(cd /usr/local/src/ImageMagick-7.0.3-2/;./configure;make;make install)


# customize network interface name
sed -i '/^GRUB_CMDLINE_LINUX/s/\"$/ net.ifnames=0 biosdevname=0\"/g' /etc/default/grub
grub2-mkconfig -o /boot/grub2/grub.cfg
reboot

#####################################################################################
## making data directory for no partion
#DATADIR=`ls / | /bin/grep data | /usr/bin/wc -l`
#if [ $DATADIR = 0 ]; then
#mkdir /data
#fi
#
## making temporaly directory
#mkdir /data/tmp
#chmod 777 /data/tmp
#####################################################################################

# NTP
systemctl enable ntpd


# configure Apache
sed -i 's/#ServerName www.example.com:80/ServerName www.example.co.jp:80/g' /etc/httpd/conf/httpd.conf
##sed -i 's/Options Indexes FollowSymLinks/Options FollowSymLinks ExecCGI/g' /etc/httpd/conf/httpd.conf
sed -i 's/Options Indexes FollowSymLinks/Options FollowSymLinks/g' /etc/httpd/conf/httpd.conf
sed -i 's/DirectoryIndex index.html/DirectoryIndex index.php index.html index.cgi index.htm/g' /etc/httpd/conf/httpd.conf
sed -i 's/AddDefaultCharset UTF-8/AddDefaultCharset Off/g' /etc/httpd/conf/httpd.conf
##sed -i 's/#AddHandler cgi-script .cgi/AddHandler cgi-script .cgi/g' /etc/httpd/conf/httpd.conf
sed -i 's/DocumentRoot "\/var\/www\/html"/DocumentRoot "\/var\/www\/public_html"/g' /etc/httpd/conf/httpd.conf
sed -i 's/<Directory "\/var\/www\/html">/<Directory "\/var\/www\/public_html">/g' /etc/httpd/conf/httpd.conf
sed -i '151d' /etc/httpd/conf/httpd.conf
sed -i '150a AllowOverride All' /etc/httpd/conf/httpd.conf

echo '' >> /etc/httpd/conf/httpd.conf
echo 'ServerTokens Prod' >> /etc/httpd/conf/httpd.conf
echo 'KeepAlive On' >> /etc/httpd/conf/httpd.conf
echo 'ServerSignature Off' >> /etc/httpd/conf/httpd.conf
echo 'TraceEnable Off' >> /etc/httpd/conf/httpd.conf
echo 'Header append X-FRAME-OPTIONS "SAMEORIGIN"' >> /etc/httpd/conf/httpd.conf

## additional secure setting
echo '' >> /etc/httpd/conf/httpd.conf
echo 'Header unset X-Powered-By' >> /etc/httpd/conf/httpd.conf
echo 'RequestHeader unset Proxy' >> /etc/httpd/conf/httpd.conf
echo 'Header set X-XSS-Protection "1; mode=block"' >> /etc/httpd/conf/httpd.conf
echo 'Header set X-Content-Type-Options nosniff' >> /etc/httpd/conf/httpd.conf

sed -i 's/SSLProtocol all -SSLv2/SSLProtocol all -SSLv2 -SSLv3/g' /etc/httpd/conf.d/ssl.conf
#sed -i 's/SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5/#SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5\nSSLCipherSuite AES:!RC4:3DES:!EXP:!ADH:!MD5:!SSLv2/g' /etc/httpd/conf.d/ssl.conf
#sed -i 's/SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5/SSLCipherSuite DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-CAMELLIA128-SHA:DHE-RSA-AES128-SHA:AES128-GCM-SHA256:AES128-SHA256:CAMELLIA128-SHA:AES128-SHA:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-SHA256:DHE-RSA-CAMELLIA256-SHA:DHE-RSA-AES256-SHA:AES256-GCM-SHA384:AES256-SHA256:CAMELLIA256-SHA:AES256-SHA/g' /etc/httpd/conf.d/ssl.conf
sed -i 's/^SSLCipherSuite.*/SSLCipherSuite DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-CAMELLIA128-SHA:DHE-RSA-AES128-SHA:AES128-GCM-SHA256:AES128-SHA256:CAMELLIA128-SHA:AES128-SHA:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-SHA256:DHE-RSA-CAMELLIA256-SHA:DHE-RSA-AES256-SHA:AES256-GCM-SHA384:AES256-SHA256:CAMELLIA256-SHA:AES256-SHA:!SEED:!IDEA/g' /etc/httpd/conf.d/ssl.conf
sed -i 's/#SSLHonorCipherOrder on/SSLHonorCipherOrder on\nSSLCompression off/g' /etc/httpd/conf.d/ssl.conf

systemctl enable httpd

# Disable some Apache configurations for security
echo '' > /etc/httpd/conf.d/manual.conf
echo '' > /etc/httpd/conf.d/welcome.conf
echo '' > /etc/httpd/conf.d/autoindex.conf


# configure PostgreSQL
rm -rf /var/lib/pgsql/data
groupadd -g 26 postgres
useradd -d /var/lib/pgsql -g 26 -u 26 postgres

su - postgres -s /bin/sh -c "initdb --encoding=UTF-8 --no-locale -D /var/lib/pgsql/data"
sed -i 's/max_connections = 100/max_connections = 256/g' /var/lib/pgsql/data/postgresql.conf
echo '' >> /var/lib/pgsql/data/postgresql.conf
echo "log_line_prefix = '%t [%p] '" >> /var/lib/pgsql/data/postgresql.conf

#systemctl start postgresql
sudo -u postgres /usr/bin/pg_ctl start -D /var/lib/pgsql/data/
systemctl enable postgresql


#install libraly
##yum install -y plpython
##pear channel-update pear.php.net
##pear install -a Mail
##pear install -a Mail_Mime


# configure PHP5.4
sed -i 's/max_execution_time = 30/max_execution_time = 0/g' /etc/php.ini
sed -i 's/max_input_time = 60/max_input_time = -1/g' /etc/php.ini
sed -i 's/memory_limit = 128M/memory_limit = 30000M/g' /etc/php.ini
sed -i 's/post_max_size = 8M/post_max_size = 20470M/g' /etc/php.ini
sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 20470M/g' /etc/php.ini
sed -i 's/;upload_tmp_dir =/upload_tmp_dir = \/data\/tmp/g' /etc/php.ini
sed -i 's/session.cookie_httponly =/session.cookie_httponly = 1/g' /etc/php.ini

#**** need to consider below part **************************************************************************************
sed -i 's/;session.cookie_secure =/session.cookie_secure = 0/g' /etc/php.ini
#***********************************************************************************************************************

sed -i 's/;mbstring.language = Japanese/mbstring.language = Japanese/g' /etc/php.ini
sed -i 's/;mbstring.internal_encoding = EUC-JP/mbstring.internal_encoding = UTF-8/g' /etc/php.ini
sed -i 's/expose_php = On/expose_php = Off/g' /etc/php.ini
sed -i 's/session.gc_maxlifetime = 1440/session.gc_maxlifetime = 86400/g' /etc/php.ini
sed -i 's/;date.timezone =/date.timezone = Asia\/Tokyo/g' /etc/php.ini


# configre Postfix
sed -i 's/#myhostname = host.domain.tld/myhostname = filedefender/g' /etc/postfix/main.cf
sed -i 's/#mydomain = domain.tld/mydomain = filedefender/g' /etc/postfix/main.cf
sed -i 's/#myorigin = $myhostname/myorigin = $myhostname/g' /etc/postfix/main.cf
sed -i 's/#home_mailbox = Maildir\//home_mailbox = Maildir\//g' /etc/postfix/main.cf
sed -i 's/#smtpd_banner = $myhostname ESMTP $mail_name/smtpd_banner = $myhostname ESMTP unknown/g' /etc/postfix/main.cf
alternatives --set mta /usr/sbin/sendmail.postfix

systemctl enable postfix



# configre sudo
sed -i 's/Defaults    requiretty/#Defaults    requiretty/g' /etc/sudoers
sed -i '98a apache  ALL=(root) NOPASSWD:/sbin/shutdown' /etc/sudoers
sed -i '99a apache  ALL=(root) NOPASSWD:/sbin/ifconfig' /etc/sudoers
sed -i '100a apache  ALL=(root) NOPASSWD:/usr/bin/convmv' /etc/sudoers
sed -i '101a apache  ALL=(root) NOPASSWD:/bin/chmod' /etc/sudoers
sed -i '102a apache  ALL=(root) NOPASSWD:/bin/cp' /etc/sudoers
sed -i '103a apache  ALL=(root) NOPASSWD:/usr/bin/systemctl' /etc/sudoers
sed -i '104a apache  ALL=(root) NOPASSWD:/usr/bin/nmcli' /etc/sudoers
sed -i '105a apache  ALL=(root) NOPASSWD:/bin/mv' /etc/sudoers
sed -i '106a apache  ALL=(root) NOPASSWD:/bin/sh' /etc/sudoers
sed -i '107a apache  ALL=(root) NOPASSWD:/bin/mkdir' /etc/sudoers
sed -i '108a apache  ALL=(root) NOPASSWD:/var/www/versionup/*/update.sh' /etc/sudoers


##cron for FileDefender
echo 'MAILTO=""' >> /var/spool/cron/root
echo '5 1 * * * php /var/www/application/batch/index_console.php -c scheduled-execution -a manipulate-cron' >> /var/spool/cron/root
echo '*/10 * * * * php /var/www/application/batch/index_console.php -c scheduled-execution -a manipulate-cron-per-ten-minutes' >> /var/spool/cron/root


#singleuser rootpassword
echo '' >> /etc/inittab
echo '~~:S:wait:/sbin/sulogin' >> /etc/inittab

#permission
chmod 757 /etc
chmod 707 /etc/resolv.conf
chmod 707 /etc/sysconfig
chmod 707 /etc/sysconfig/network
chmod 707 /etc/sysconfig/network-scripts/
chmod 707 /etc/sysconfig/network-scripts/ifcfg-eth0
chmod 707 /etc/postfix/main.cf



# install File Defender source
yum -y install git
yum update -y nss curl libcurl
mv /var/www /var/__www__
#mkdir /var/www
git clone https://gitlab.plott.co.jp/plott/file-defender.git /var/www/ -b master --depth 1
mv /usr/local/src/server /usr/local/src/www
mv /usr/local/src/www /var/www

# set FileDefender directory
chmod 777 /var/www/application/data
mkdir /var/www/application/smarty/templates_c
chown -R apache:apache /var/www/application/smarty/templates_c
mkdir /var/www/application/log
mkdir /var/www/application/log/application
mkdir /var/www/application/log/db
mkdir /var/www/application/log/debug
mkdir /var/www/application/data/systembackup
chown -R apache:apache /var/www/application/data/systembackup
chown -R apache:apache /var/www/application/log
rm -rf /var/__www
rm -rf /var/www/document

# initialize FileDefender Database
su - postgres -c 'createdb filedefender -E utf8 -O postgres'
chmod 777 /var/www/database/pseudo_migrate.sh
bash /var/www/database/pseudo_migrate.sh


# install composer
wget http://192.168.3.250/fd/composer.phar -P /usr/local/bin/
mv /usr/local/bin/composer.phar /usr/local/bin/composer
chmod 755 /usr/local/bin/composer
(cd /var/www;/usr/local/bin/composer install)


## Set shell for user"FileDefender"
useradd -p $(perl -e 'print crypt("1111", "\$6\$saltsalt")') filedefender
mv /var/www/console/console.sh /home/filedefender/
chown filedefender.filedefender /home/filedefender/console.sh
chmod 755 /home/filedefender/console.sh
usermod -s /home/filedefender/console.sh filedefender
rm -rf /var/www/console


## set sudo for user"FileDefender"
echo '' >> /etc/sudoers
echo 'filedefender  ALL=(root) NOPASSWD:/usr/sbin/authconfig-tui' >> /etc/sudoers
echo 'filedefender  ALL=(root) NOPASSWD:/usr/sbin/ifconfig' >> /etc/sudoers
echo 'filedefender  ALL=(root) NOPASSWD:/usr/bin/vim' >> /etc/sudoers
echo 'filedefender  ALL=(root) NOPASSWD:/usr/bin/systemctl' >> /etc/sudoers
echo 'filedefender  ALL=(root) NOPASSWD:/bin/psql' >> /etc/sudoers
#echo 'filedefender  ALL=(root) NOPASSWD:/usr/bin/chmod 666 /etc/samba/smb.conf' >> /etc/sudoers
#echo 'filedefender  ALL=(root) NOPASSWD:/usr/bin/chmod 644 /etc/samba/smb.conf' >> /etc/sudoers
echo 'filedefender  ALL=(root) NOPASSWD:/usr/bin/chmod 666 /etc/hosts' >> /etc/sudoers
echo 'filedefender  ALL=(root) NOPASSWD:/usr/bin/chmod 644 /etc/hosts' >> /etc/sudoers
echo 'filedefender  ALL=(root) NOPASSWD:/usr/bin/chmod 666 /etc/exports' >> /etc/sudoers
echo 'filedefender  ALL=(root) NOPASSWD:/usr/bin/chmod 644 /etc/exports' >> /etc/sudoers
echo 'filedefender  ALL=(root) NOPASSWD:/usr/bin/chmod 666 /etc/ntp.conf' >> /etc/sudoers
echo 'filedefender  ALL=(root) NOPASSWD:/usr/bin/chmod 644 /etc/ntp.conf' >> /etc/sudoers
echo 'filedefender  ALL=(root) NOPASSWD:/usr/bin/nmcli' >> /etc/sudoers
echo 'filedefender  ALL=(root) NOPASSWD:/usr/bin/hostnamectl set-hostname *' >> /etc/sudoers
echo 'filedefender  ALL=(root) NOPASSWD:/usr/bin/chmod 666 /etc/rsyslog.conf' >> /etc/sudoers
echo 'filedefender  ALL=(root) NOPASSWD:/usr/bin/chmod 644 /etc/rsyslog.conf' >> /etc/sudoers
echo 'filedefender  ALL=(root) NOPASSWD:/usr/bin/nmtui' >> /etc/sudoers
echo 'filedefender  ALL=(root) NOPASSWD:/usr/sbin/ip route' >> /etc/sudoers


rm -rf /var/www/icons
rm -rf /var/www/manual
rm -rf /var/www/error/README


#ionCube
wget http://192.168.3.250/sf5/centos7/ioncube_loader.so -P /usr/lib64/php/modules/
wget http://192.168.3.250/sf5/centos7/ioncube_loader.ini -P /etc/php.d/



# Initialize Script for FileDefender
wget http://192.168.3.250/fd/fd_initialize.sh -P /usr/local/src/
chmod 755 /usr/local/src/fd_initialize.sh



#SSH key
mkdir /root/.ssh
echo "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAv2d0VJxwecoRwhl/QM6WZ5V4fifashKIjbsc69+USzP+Y6IT7cbbQKyRoJ+AOMFPXib1iZr8NSAp5LUt19jA+ulhUvcmgWpxz1oxuiqXvNNf9nDLMxTk8XAx0My3yg+uh676DCRbZi3U2u3i8XaBa387r8+qZwxqm/9U8shdcDKetmNm+Tbf8AFf4Y7EDAbckJbr7I4FEWiTwboBAJ71HOS5aGfOWKRmACPyrHrDYtE5SncPaFZiXpqst/80LfAPqesjNp8nY/ExRfA6e95CPCCAwrfgTtlxAnZjMJSqLRd/4P0TdnqWpHqiT5IXedrbJsy4JGtzi87V7Mtl110kIQ== root@sf01web" > /root/.ssh/authorized_keys
chmod 600 /root/.ssh/authorized_keys


# set firewalld
#systemctl start firewalld.service
#systemctl enable firewalld.service
#firewall-cmd --permanent --zone=public --add-service=http
#/usr/bin/firewall-cmd --permanent --zone=public --add-service=https
#/usr/bin/firewall-cmd --permanent --zone=public --add-service=ldap
#/usr/bin/firewall-cmd --reload

# set Xymon
#yum install gcc pcre-devel rrdtool-devel libpng-devel openssl-devel openldap-devel -y
#wget http://192.168.3.250/sf6/xymon-4.3.27-1_plott.el7.centos.x86_64.rpm -P /usr/local/src/
#rpm -ivh /usr/local/src/xymon-4.3.27-1_plott.el7.centos.x86_64.rpm
#/etc/rc.d/init.d/xymon start


# customize network interface name
#sed -i '/^GRUB_CMDLINE_LINUX/s/\"$/ net.ifnames=0 biosdevname=0\"/g' /etc/default/grub
#grub2-mkconfig -o /boot/grub2/grub.cfg

# customize network connection profile
#nmcli connection delete 'Wired connection 1'
#nmcli connection add type ethernet ifname eth0 con-name eth0 autoconnect no ip4 192.168.4.200/24 gw4 192.168.4.1
#nmcli connection modify eth0 ipv4.dns 192.168.3.253 +ipv4.dns 192.168.6.254 connection.autoconnect yes


# Disable display of OS information
sed -i.bk 's/GRUB_TIMEOUT=5/GRUB_TIMEOUT=0/g' /etc/default/grub
grub2-mkconfig -o /boot/grub2/grub.cfg
sed -i.bk '/^PRETTY_NAME/s/PRETTY_NAME=\"CentOS Linux 7 (Core)\"/PRETTY_NAME=\"File Defender\"/gi' /etc/os-release
echo "File Defender" > /etc/issue
echo "File Defender" > /etc/issue.net


# Setting NTP
#/usr/bin/sed -i "/^server 0/i server ntp.nict.jp" /etc/ntp.conf
/usr/bin/sed -i "/^server 3/a server ntp.nict.jp" /etc/ntp.conf
/usr/bin/sed -i "s/^server 0/#server 0/g" /etc/ntp.conf
/usr/bin/sed -i "s/^server 1/#server 1/g" /etc/ntp.conf
/usr/bin/sed -i "s/^server 2/#server 2/g" /etc/ntp.conf
/usr/bin/sed -i "s/^server 3/#server 3/g" /etc/ntp.conf
systemctl start ntpd.service
systemctl enable ntpd.service


# get setup-network.txt
wget http://192.168.3.250/centos/7.1.1503/setup-network-eth0 -P /usr/local/src/
wget http://192.168.3.250/centos/7.1.1503/setup-network-eth1 -P /usr/local/src/
chmod 755 /usr/local/src/setup-network-eth0
chmod 755 /usr/local/src/setup-network-eth1
/usr/local/src/setup-network-eth0


wget http://192.168.3.250/sf5/centos7/change-network-eth0 -P /usr/local/src/
wget http://192.168.3.250/sf5/centos7/change-network-eth1 -P /usr/local/src/
chmod 755 /usr/local/src/change-network-eth0
chmod 755 /usr/local/src/change-network-eth1
/usr/local/src/change-network-eth0


# Setting Syslog
sed -i -e '75i # Save filedefender messages' /etc/rsyslog.conf
sed -i -e '76i local0.info                                             /var/log/fd_info' /etc/rsyslog.conf


# Setting Logrotate for FileDefender
cat > /etc/logrotate.d/fd_info <<EOF
# FileDefenderが主にPHPのsyslog関数を使って書き込むログファイルのローテート
/var/log/fd_info {
    #周期はデフォルト設定
    #root apache どちらが書き込むかはわからないので666
    create 666 root
    #新種ログ作成時に空ログを作成しなくてもいいように
    missingok
    #空ならローテーションしない
    notifempty
}
EOF
/usr/sbin/logrotate /etc/logrotate.conf


# Download Folder for Systemlog
mkdir /var/www/system_info
chown apache:apache /var/www/system_info

# Setting for SSL Certificate
mkdir /var/www/csr
cp /etc/pki/ca-trust/extracted/openssl/ca-bundle.trust.crt /var/www/csr/ca.crt
mv /etc/pki/tls/private/localhost.key /var/www/csr/srv.key
mv /etc/pki/tls/certs/localhost.crt /var/www/csr/srv.crt
chown -R apache:apache /var/www/csr
chmod 600 /var/www/csr/*
ln -s /var/www/csr/srv.key /etc/pki/tls/private/localhost.key
ln -s /var/www/csr/srv.crt /etc/pki/tls/certs/localhost.crt
ln -s /var/www/csr/ca.crt /etc/pki/tls/certs/server-chain.crt
sed -i 's/#SSLCertificateChainFile \/etc\/pki\/tls\/certs\/server-chain.crt/SSLCertificateChainFile \/etc\/pki\/tls\/certs\/server-chain.crt/g' /etc/httpd/conf.d/ssl.conf

# Image Directory
mkdir /var/www/public_html/common/image/logo/tmp
chown -R apache:apache /var/www/public_html/common/image/logo

# remove some files
rm -rf /var/www/Dockerfile
mv -f /var/www/php.ini /etc

#pkill -u 26
#pkill -u 1000
#%end

# tmp dir for patch
mkdir /var/www/versionup
mkdir /var/www/versionup/backup
mkdir /var/www/versionup/upload
chmod 777 /var/www/versionup
chmod 777 /var/www/versionup/backup
chmod 777 /var/www/versionup/upload

# Enhance SSH security
echo "Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr" >> /etc/ssh/sshd_config
echo "Macs umac-128-etm@openssh.com,hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-64-etm@openssh.com,umac-64@openssh.com" >> /etc/ssh/sshd_config


### FileDefender versionup ###
#mkdir /usr/local/src/versionup

#wget http://192.168.3.250/fd/versionup/fd_1_3_1_patch -P /usr/local/src/versionup/

#unzip -P zDz5HYxApHPvvqjHEV9j /usr/local/src/versionup/fd_1_3_1_patch -d /var/www/versionup/

#chown -R apache:apache /var/www/versionup/*
#find /var/www/versionup/ -type d -exec chmod 777 {} \;
#find /var/www/versionup/ -name \*.sh -exec chmod 777 {} \;
#find /var/www/versionup/ -name make_command.php -exec chmod 777 {} \;

#/var/www/versionup/ver1.3.1/update.sh

#sudo cp -rf /var/www/versionup/ver1.3.1/program/var/www/* /var/www/

#rm -rf /usr/local/src/versionup

pkill -u 26
#pkill -u 1000
%end
# restart system
reboot


#pkill -u 26

# restart system
#reboot

#/usr/bin/chvt 1
#%end
