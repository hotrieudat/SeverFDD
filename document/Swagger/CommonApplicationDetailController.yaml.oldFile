openapi: '3.0.3'
info:
  version: 1.4.6
  title: CommonApplicationDetailController

servers:
  - url: http://localhost:8084
    description: For real server

tags:
  - name: Processes
    description: |
      <div>When calling with ajax, the request is "POST", except for legacy browsers.</div>
  - name: Pages
    description: (and modal pages). Almost 'GET' requests.

paths:

  /common-application-detail/index:
    get:
      tags: ["Pages"]
      description: Index.
      responses:
        '200':
          description: Successful response

  /common-application-detail/list:
    post:
      tags: ["Processes"]
      description: Get list of common application detail information for index page.
      responses:
        '200':
          $ref: '#/components/responses/success_xml_list'

  /common-application-detail/searchdialog:
    get:
      tags: ["Pages"]
      description: modal | Dialog for search.
      responses:
        '200':
          description: Successful response

  /common-application-detail/search:
    post:
      tags: ["Processes"]
      description: Set search parameters for projects.
      requestBody:
        description: In to ajax parameters:data.
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                search[master][file_name][ilike]:
                  description: Physical file name.
                  type: string
                  example: 'win.ini'
                search[master][file_suffix][ilike]:
                  description: File extension pattern.
                  type: string
                  example: ''
                search[master][folder_path][ilike]:
                  description: Folder path.
                  type: string
                  example: "\\Windows"
        required: false
      responses:
        '200':
          $ref: '#/components/responses/success_json'

  /common-application-detail/sort:
    post:
      tags: ["Processes"]
      description: Reload after set sort parameters.
      requestBody:
        description: In to ajax parameters:data.
        content:
          application/ajax:
            schema:
              type: object
              properties:
                order: 
                  description: Target column.
                  type: string
                  example: 'file_name'
                direction:
                  description: Direction to sort. asc | desc
                  type: string
                  example: 'asc'
                parent_code:
                  description: apllication_control_mst.apllication_control_id.
                  type: string
                  example: '00009'
      responses:
        '200':
          $ref: '#/components/responses/success_json'

  /common-application-detail/regist:
    get:
      tags: ["Pages"]
      description: Register.
      responses:
        '200':
          description: Successful response

  /common-application-detail/execregist:
    post:
      tags: ["Processes"]
      description: |
        <h3>Attention: It can affect the results of "Code ception".</h3>
        <div>Please delete, after insert record.</div>
      requestBody:
        description: In to ajax parameters:data.
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                form[file_name]:
                  description: Physical file name.
                  type: string
                  example: ''
                form[file_suffix]:
                  description: File extension pattern.
                  type: string
                  example: 'csv'
                form[folder_path]:
                  description: Folder path.
                  type: string
                  example: '\\Directory'
        required: false
      responses:
        '200':
          description: Result xml.
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: result # <<<
                properties:
                  message:
                    type: string
                    example: "更新を完了しました。"
                  debug:
                    type: string
                    example: ""
                  status:
                    type: integer
                    example: 1

  /common-application-detail/update/code/{commonWhiteListId}:
    get:
      tags: ["Pages"]
      description: Update.
      responses:
        '200':
          description: Successful response
    parameters:
    - $ref: "#/components/parameters/commonWhiteListId"

  /common-application-detail/execupdate:
    post:
      tags: ["Processes"]
      description: |
        <h3>Attention: It can affect the results of "Code ception".</h3>
        <div>Please revert, after update record.</div>
      requestBody:
        description: In to ajax parameters:data.
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                form[file_name]:
                  description: Physical file name.
                  type: string
                  example: ''
                form[file_suffix]:
                  description: File extension pattern.
                  type: string
                  example: 'csv'
                form[folder_path]:
                  description: Folder path.
                  type: string
                  example: '\\Directory'
                code:
                  description: common_white_list.common_white_list_id
                  type: string
                  example: '0018'
        required: false
      responses:
        '200':
          description: Result xml.
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: result # <<<
                properties:
                  message:
                    type: string
                    example: "更新を完了しました。"
                  debug:
                    type: string
                    example: ""
                  status:
                    type: integer
                    example: 1

  /common-application-detail/execdelete:
    post:
      tags: ["Processes"]
      description: |
        <h3>Attention: It can affect the results of "Code ception".</h3>
        <div>Please delete, after create record.</div>
      requestBody:
        description: In to ajax parameters:data.
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                code:
                  description: common_white_list.common_white_list_id
                  type: string
                  example: '0018'
        required: false
      responses:
        '200':
          description: Result xml.
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: result # <<<
                properties:
                  message:
                    type: string
                    example: "削除を完了しました。"
                  debug:
                    type: string
                    example: ""
                  status:
                    type: integer
                    example: 1

components:

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  schemas:

    xmllist_rows_inner:
      items:
        type: object
        properties:
          row:
            type: object
            properties:
              id:
                type: string
                example: "0018"
                xml:
                  attribute: true
              check_cell: # mean name
                type: string
                example: ''
                xml:
                  name: cell
              file_name: # mean name
                type: string
                example: test20201222
                xml:
                  name: cell
              file_extension_pattern: # mean name
                type: string
                example: 'csv'
                xml:
                  name: cell
              folder_path: # mean name
                type: string
                example: \\Windows
                xml:
                  name: cell
              spacer_cell: # mean name
                type: string
                example: ''
                xml:
                  name: cell
      xml:
        name: rows

  responses:

    success_json:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              custom_data:
                type: object
                properties:
                  error_code:
                    description: If the registration failed, the error code is given here. If succeeded, this is empty string.
                    type: string
                    example: ''
                  debug_messages:
                    type: object
                  error_messages:
                    type: object
                  messages:
                    description: Message for the success of the registration.
                    type: string
                    example: ''
                  status:
                    description: Whether the request succeeded or not.
                    type: boolean
                    example: true

    success_xml_list:
      description: Result xml.
      content:
        application/xml:
          schema:
            type: object
            xml:
              name: return_data # <<<
            properties:
              rows:
                type: array
                items:
                $ref: "#/components/schemas/xmllist_rows_inner"
              message:
                type: string
                example: ""
              debug:
                type: string
                example: ""
              status:
                type: integer
                example: 1
              page:
                type: integer
                example: 0
              max:
                type: integer
                example: 17
              limit:
                type: integer
                example: 50

  parameters:
  
    commonWhiteListId:
      name: commonWhiteListId
      in: path
      required: true
      description: Column common_white_list.common_white_list_id
      schema:
        type: string
        example: '0018'

security:
- basicAuth: []