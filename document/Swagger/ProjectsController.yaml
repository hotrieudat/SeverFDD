openapi: '3.0.3'
info:
  version: 1.4.6
  title: ProjectsController
  description: Manage project.

servers:
  - url: http://localhost:8084
    description: For real server

tags:
  - name: Processes
    description: |
      <div>When calling with ajax, the request is "POST", except for legacy browsers.</div>
  - name: Pages
    description: (and modal pages). Almost 'GET' requests.

paths:

  /projects/index:
    get:
      tags: ["Pages"]
      description: Index.
      responses:
        '200':
          description: Successful response

  /projects/list:
    post:
      tags: ["Processes"]
      description: Get list of projects for index page.
      responses:
        '200':
          $ref: '#/components/responses/success_xml_list'

  /projects/searchdialog:
    get:
      tags: ["Pages"]
      description: modal | Dialog for search.
      responses:
        '200':
          description: Successful response

  /projects/search:
    post:
      tags: ["Processes"]
      description: |
        <div>Set search parameters for projects page.</div>
        <div>The parameters sent will be registered in the session.</div>
      requestBody:
        description: In to ajax parameters:data.
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                search[master][project_name][ilike]:
                  description: project_name.
                  type: string
                  example: 'テストプロジェクト 900001'
                search[master][project_comment][ilike]:
                  description: project_comment.
                  type: string
                  example: ''
                search[master][is_closed]:
                  description: |
                    <div>Effectiveness flag</div>
                    <div>'' Both | 全て</div>
                    <div>'0' On going. | 進行中</div>
                    <div>'1' Closed. | 終了</div>
                  type: string
                  example: ''
        required: false
      responses:
        '200':
          $ref: '#/components/responses/success_json'

  /projects/sort:
    post:
      tags: ["Processes"]
      description: Reload after set sort parameters.
      requestBody:
        description: |
          <div>In to ajax parameters:data.</div>
          <div>This method changes the sort target according to the contents of the parameters.</div>
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                order:
                  description: Target column.
                  type: string
                  example: link_project_name
                direction:
                  description: direction to sort. asc | desc
                  type: string
                  example: 'asc'
                parent_code:
                  description: |
                    <div>Parent code.</div>
                    <div>If has not parent, then you must set empty value for this paramter.</div>
                  type: string
                  example: ''
      responses:
        '200':
          $ref: '#/components/responses/success_json'

  /projects/regist:
    get:
      tags: ["Pages"]
      description: Create project.
      responses:
        '200':
          description: Successful response

  /projects/execregist:
    post:
      tags: ["Processes"]
      description: |
        <h3>Attention: It can affect the results of "Code ception".</h3>
        <div>Please delete, after create record.</div>
      requestBody:
        description: In to ajax parameters:data.
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                form[project_name]:
                  description: project_name.
                  type: string
                  example: 'testProject'
                form[project_comment]:
                  description: project_comment.
                  type: string
                  example: ''
                form[can_encrypt]:
                  description: |
                    <div> flag</div>
                    <div>'0' Can not encript. | 不可</div>
                    <div>'1' Can encript. | 可</div>
                  type: string
                  example: '0'
                form[can_decrypt]:
                  description: |
                    <div> flag</div>
                    <div>'0' Can not decript. | 不可</div>
                    <div>'1' Can decript. | 可</div>
                  type: string
                  example: '0'
                form[can_edit]:
                  description: |
                    <div> flag</div>
                    <div>'0' Can not edit. | 不可</div>
                    <div>'1' Can edit. | 可</div>
                  type: string
                  example: '0'
                form[can_clipboard]:
                  description: |
                    <div> flag</div>
                    <div>'0' Can not use clipboard. | 不可</div>
                    <div>'1' Can use clipboard. | 可</div>
                  type: string
                  example: '0'
                form[can_print]:
                  description: |
                    <div> flag</div>
                    <div>'0' Can not print. | 不可</div>
                    <div>'1' Can print. | 可</div>
                  type: string
                  example: '0'
                form[can_screenshot]:
                  description: |
                    <div> flag</div>
                    <div>'0' Can not capture scrreen. | 不可</div>
                    <div>'1' Can capture screen. | 可</div>
                  type: string
                  example: '0'
        required: false
      responses:
        '200':
          description: Result xml.
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: result # <<<
                properties:
                  message:
                    type: string
                    example: "登録が完了しました。"
                  debug:
                    type: string
                    example: ""
                  status:
                    type: integer
                    example: 1

  /projects/update/code/{ProjectId}/:
    get:
      tags: ["Pages"]
      description: Update project.
      responses:
        '200':
          description: Successful response
    parameters:
    - $ref: "#/components/parameters/ProjectId"

  /projects/execupdate:
    post:
      tags: ["Processes"]
      description: |
        <h3>Attention: It can affect the results of "Code ception".</h3>
        <div>Please undo, after making changes.</div>
      requestBody:
        description: In to ajax parameters:data.
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                form[project_name]:
                  description: project_name.
                  type: string
                  example: 'testProject'
                form[project_comment]:
                  description: project_comment.
                  type: string
                  example: ''
                form[can_encrypt]:
                  description: |
                    <div> flag</div>
                    <div>'0' Can not encript. | 不可</div>
                    <div>'1' Can encript. | 可</div>
                  type: string
                  example: '1'
                form[can_decrypt]:
                  description: |
                    <div> flag</div>
                    <div>'0' Can not decript. | 不可</div>
                    <div>'1' Can decript. | 可</div>
                  type: string
                  example: '1'
                form[can_edit]:
                  description: |
                    <div> flag</div>
                    <div>'0' Can not edit. | 不可</div>
                    <div>'1' Can edit. | 可</div>
                  type: string
                  example: '1'
                form[can_clipboard]:
                  description: |
                    <div> flag</div>
                    <div>'0' Can not use clipboard. | 不可</div>
                    <div>'1' Can use clipboard. | 可</div>
                  type: string
                  example: '1'
                form[can_print]:
                  description: |
                    <div> flag</div>
                    <div>'0' Can not print. | 不可</div>
                    <div>'1' Can print. | 可</div>
                  type: string
                  example: '1'
                form[can_screenshot]:
                  description: |
                    <div> flag</div>
                    <div>'0' Can not capture scrreen. | 不可</div>
                    <div>'1' Can capture screen. | 可</div>
                  type: string
                  example: '1'
        required: false      
      responses:
        '200':
          description: Result xml.
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: result # <<<
                properties:
                  message:
                    type: string
                    example: "更新を完了しました。"
                  debug:
                    type: string
                    example: ""
                  status:
                    type: integer
                    example: 1
    parameters:
    - $ref: "#/components/parameters/ProjectId"

  /projects/execdelete/code/{ProjectId}:
    post:
      tags: ["Processes"]
      description: |
        <h3>Caution: This is a "physical" deletion.</h3>
        <div>You must execute backup of target record, before delete project.</div>
      responses:
        '200':
          description: Result xml.
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: result # <<<
                properties:
                  message:
                    type: string
                    example: "削除を完了しました。"
                  debug:
                    type: string
                    example: ""
                  status:
                    type: integer
                    example: 1
    parameters:
    - $ref: "#/components/parameters/ProjectId"

components:

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  schemas:

    xmllist_rows_inner:
      items:
        type: object
        properties:
          row:
            type: object
            properties:
              id:
                type: string
                example: "000001"
                xml:
                  attribute: true
              check_cell: # mean name
                type: string
                example: ''
                xml:
                  name: cell
              link_project_name: # mean name
                type: string
                example: '&lt;a href=&quot;/projects-detail/index/parent_code/900001&quot; class=&quot;js-balloon&quot; title=&quot;テストプロジェクト 900001&quot; alt=&quot;テストプロジェクト 900001&quot;&gt;テストプロジェクト 900001&lt;/a&gt;'
                xml:
                  name: cell
              comment: # mean name
                type: string
                example: ''
                xml:
                  name: cell
              status: # mean name
                type: string
                example: 進行中
                xml:
                  name: cell
              participant_count_number: # mean name
                type: string
                example: 3
                xml:
                  name: cell
              file_count_number: # mean name
                type: string
                example: 2
                xml:
                  name: cell
      xml:
        name: rows

  responses:

    success_json:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              custom_data:
                type: object
                properties:
                  error_code:
                    description: If the registration failed, the error code is given here. If succeeded, this is empty string.
                    type: string
                    example: ''
                  debug_messages:
                    type: object
                  error_messages:
                    type: object
                  messages:
                    description: Message for the success of the registration.
                    type: string
                    example: ''
                  status:
                    description: Whether the request succeeded or not.
                    type: boolean
                    example: true

    success_xml_list:
      description: Result xml.
      content:
        application/xml:
          schema:
            type: object
            xml:
              name: return_data # <<<
            properties:
              rows:
                type: array
                items:
                $ref: "#/components/schemas/xmllist_rows_inner"
              message:
                type: string
                example: ""
              debug:
                type: string
                example: ""
              status:
                type: integer
                example: 1
              page:
                type: integer
                example: 0
              max:
                type: integer
                example: 6
              limit:
                type: integer
                example: 50

  parameters:
    ProjectId:
      name: ProjectId
      in: path
      required: true
      description: Column projects.project_id
      schema:
        type: string
        example: '000001'

security:
- basicAuth: []