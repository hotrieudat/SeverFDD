server {
  listen 8084; # If access port 8084
  root /var/www/;
  index index.php
  server_name web; # If access Domain name localhost
  location / {
    # proxy_redirect off;
    # proxy_set_header Host $host;
    # proxy_set_header X-Real-IP $remote_addr;
    # proxy_set_header X-Forwarded-Host $host;
    # proxy_set_header X-Forwarded-Server $host;
    # proxy_set_header X-Forwarded-Proto $scheme;
    # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # @NOTE If use curl on terminal, then input curl -X GET "http://web/~" -H  "accept: */*"
    #       else use curl -X GET "http://localhost:8084/~" -H  "accept: */*" on yaml.
    # proxy_set_header X-NginX-Proxy true;
    # proxy_cookie_path / "/; secure; SameSite=none";
    proxy_pass "http://web";
    # resolver 172.22.0.7 ipv6=off;

    # @NOTE If you need lua then remove comment mark.
    # header_filter_by_lua '
    #     local cookies = ngx.header.set_cookie 
    #     if not cookies then return end
    #     if type(cookies) ~= "table" then cookies = {cookies} end
    #     local newcookies = {}
    #     for i, val in ipairs(cookies) do
    #         local newval = string.gsub(val, "([dD]omain)=[%w_-\\\\.]+", 
    #                   "%1=localhost") 
    #         table.insert(newcookies, newval) 
    #     end 
    #     ngx.header.set_cookie = newcookies 
    # ';

    # @NOTE This parameter have to empty, because was set root/docker-compose.yml -> swagger-nginx container.
    #       If set not empty, fire CORS error.
    add_header Access-Control-Allow-Origin "$http_origin";
    add_header Cross-Origin-Resource-Policy cross-origin;
    add_header Access-Control-Allow-Methods "*";
    add_header Access-Control-Allow-Headers "*";
    add_header Access-Control-Allow-Credentials true;
    add_header Cross-Origin-Referrer-Policy unsafe-url;
    add_header Referrer-Policy unsafe-url;

  }
  # location /user/list {
  #   # @NOTE If use curl on terminal, then input curl -X GET "http://web/~" -H  "accept: */*"
  #   #       else use curl -X GET "http://localhost:8084/~" -H  "accept: */*" on yaml.
  #   proxy_pass "http://web/user/list";
  #   # @NOTE This parameter have to empty, because was set root/docker-compose.yml -> swagger-nginx container.
  #   #       If set not empty, fire CORS error.
  #   add_header Access-Control-Allow-Origin "$http_origin";
  #   add_header Cross-Origin-Resource-Policy cross-origin;
  #   add_header Access-Control-Allow-Methods "*";
  #   add_header Access-Control-Allow-Headers "*";
  #   add_header Access-Control-Allow-Credentials true;
  # }
  location ~ [^/]\.php(/|$) {
    # proxy_redirect off;
    # proxy_set_header Host $host;
    # proxy_set_header X-Real-IP $remote_addr;
    # proxy_set_header X-Forwarded-Host $host;
    # proxy_set_header X-Forwarded-Server $host;
    # proxy_set_header X-Forwarded-Proto $scheme;
    # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # proxy_set_header X-NginX-Proxy true;
    # proxy_cookie_path / "/; secure; SameSite=none";
    proxy_pass "http://web";

    # proxy_redirect off;
    # proxy_set_header Host $host;
    # proxy_set_header X-Real-IP $remote_addr;
    # proxy_set_header X-Forwarded-Host $host;
    # proxy_set_header X-Forwarded-Server $host;
    # proxy_set_header X-Forwarded-Proto $scheme;
    # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # @NOTE If you need lua then remove comment mark.
    # header_filter_by_lua '
    #     local cookies = ngx.header.set_cookie 
    #     if not cookies then return end
    #     if type(cookies) ~= "table" then cookies = {cookies} end
    #     local newcookies = {}
    #     for i, val in ipairs(cookies) do
    #         local newval = string.gsub(val, "([dD]omain)=[%w_-\\\\.]+", 
    #                   "%1=localhost") 
    #         table.insert(newcookies, newval) 
    #     end 
    #     ngx.header.set_cookie = newcookies 
    # ';
    # # PATH_INFO 部の分割に使用する正規表現を指定
    # # 一つ目 ( .+\.php ) は $fastcgi_script_name の値になり、二つ目 ( /.+ ) は $fastcgi_path_info の値になる
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    # if (!-f $document_root$fastcgi_script_name) {
    #     return 404;
    # }
    # # FastCGI サーバへリクエストをプロキシする
    # #fastcgi_pass 127.0.0.1:9000;
    fastcgi_pass unix:/var/run/php5-fpm.sock;
    # # スラッシュで終わる URI の後に追加されるファイル名を設定
    # # $fastcgi_script_name の値になる
    fastcgi_index index.php;
    # # 設定ファイルを読み込む
    # include fastcgi_params;
    # # FastCGI サーバに渡されるべきパラメータを設定
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param PATH_INFO $fastcgi_path_info;
    fastcgi_param PATH_TRANSLATED $document_root$fastcgi_path_info;

    # CORS start
    add_header Access-Control-Allow-Origin "$http_origin" always;
    add_header Cross-Origin-Resource-Policy cross-origin;
    add_header Access-Control-Allow-Methods "*";
    add_header Access-Control-Allow-Headers "*";
    add_header Access-Control-Allow-Credentials true;
    add_header Cross-Origin-Referrer-Policy unsafe-url;
    add_header Referrer-Policy unsafe-url;
    # CORS end
  }
}
